-- ======================================================================
-- TERRANEX BIOM√âTHANE - V√âRIFICATION ENVIRONNEMENT
-- ======================================================================
-- Description: V√©rification compl√®te de l'environnement Terranex
-- Usage: Ex√©cuter AVANT installation pour v√©rifier les pr√©requis
--        Ex√©cuter APR√àS installation pour valider le d√©ploiement
-- ======================================================================

USE ROLE ACCOUNTADMIN;

-- ======================================================================
-- V√âRIFICATION DES PR√âREQUIS
-- ======================================================================
SELECT 'üîç V√âRIFICATION PR√âREQUIS TERRANEX' AS titre;

-- V√©rification Snowflake Intelligence
SELECT 
    'üß† Snowflake Intelligence' AS composant,
    CASE 
        WHEN EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.DATABASES WHERE DATABASE_NAME = 'SNOWFLAKE_INTELLIGENCE')
        THEN '‚úÖ DISPONIBLE'
        ELSE '‚ùå NON DISPONIBLE - Contactez votre administrateur'
    END AS statut;

-- V√©rification des permissions utilisateur actuel
SELECT 
    'üë§ Utilisateur actuel' AS composant,
    CURRENT_USER() AS utilisateur,
    CURRENT_ROLE() AS role_actuel;

-- ======================================================================
-- V√âRIFICATION ENVIRONNEMENT TERRANEX (si d√©j√† install√©)
-- ======================================================================

-- V√©rification du r√¥le
SELECT 
    'üë§ R√¥le SF_Intelligence_Demo' AS composant,
    CASE 
        WHEN EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.APPLICABLE_ROLES WHERE ROLE_NAME = 'SF_INTELLIGENCE_DEMO')
        THEN '‚úÖ EXISTE'
        ELSE '‚ùå ABSENT'
    END AS statut;

-- V√©rification du warehouse
SELECT 
    'üè≠ Warehouse TERRANEX_WH' AS composant,
    CASE 
        WHEN EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.WAREHOUSES WHERE WAREHOUSE_NAME = 'TERRANEX_WH')
        THEN '‚úÖ EXISTE'
        ELSE '‚ùå ABSENT'
    END AS statut;

-- V√©rification de la base de donn√©es
SELECT 
    'üóÑÔ∏è Database DB_TERRANEX' AS composant,
    CASE 
        WHEN EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.DATABASES WHERE DATABASE_NAME = 'DB_TERRANEX')
        THEN '‚úÖ EXISTE'
        ELSE '‚ùå ABSENT'
    END AS statut;

-- ======================================================================
-- V√âRIFICATION D√âTAILL√âE (si environnement existe)
-- ======================================================================

-- Basculer vers l'environnement Terranex si il existe
USE ROLE SF_Intelligence_Demo;
USE DATABASE DB_TERRANEX;
USE SCHEMA PRODUCTION;

-- V√©rification des tables
SELECT 
    'üìä TABLES TERRANEX' AS section,
    '' AS table_name,
    '' AS nb_records
UNION ALL
SELECT 
    '',
    'SITE_DIM',
    COALESCE((SELECT COUNT(*)::VARCHAR FROM SITE_DIM), 'N/A')
UNION ALL
SELECT 
    '',
    'TEMPS_DIM',
    COALESCE((SELECT COUNT(*)::VARCHAR FROM TEMPS_DIM), 'N/A')
UNION ALL
SELECT 
    '',
    'RESEAU_DIM',
    COALESCE((SELECT COUNT(*)::VARCHAR FROM RESEAU_DIM), 'N/A')
UNION ALL
SELECT 
    '',
    'QUALITE_DIM',
    COALESCE((SELECT COUNT(*)::VARCHAR FROM QUALITE_DIM), 'N/A')
UNION ALL
SELECT 
    '',
    'INJECTION_FACT',
    COALESCE((SELECT COUNT(*)::VARCHAR FROM INJECTION_FACT), 'N/A')
UNION ALL
SELECT 
    '',
    'TERRANEX_PARSED_CONTENT',
    COALESCE((SELECT COUNT(*)::VARCHAR FROM TERRANEX_PARSED_CONTENT), 'N/A');

-- V√©rification des vues
SELECT 
    'üß† VUES ANALYTIQUES' AS section,
    '' AS vue_name,
    '' AS statut
UNION ALL
SELECT 
    '',
    'TERRANEX_BIOMETHANE_ANALYTICS_VIEW',
    CASE 
        WHEN EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'TERRANEX_BIOMETHANE_ANALYTICS_VIEW')
        THEN '‚úÖ EXISTE'
        ELSE '‚ùå ABSENT'
    END
UNION ALL
SELECT 
    '',
    'ML_TRAINING_DATA',
    CASE 
        WHEN EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'ML_TRAINING_DATA')
        THEN '‚úÖ EXISTE'
        ELSE '‚ùå ABSENT'
    END;

-- V√©rification des services Cortex Search
SHOW CORTEX SEARCH SERVICES LIKE '%TERRANEX%';

-- V√©rification des proc√©dures
SELECT 
    '‚öôÔ∏è STORED PROCEDURES' AS section,
    '' AS procedure_name,
    '' AS statut
UNION ALL
SELECT 
    '',
    'PREDICT_TERRANEX_PRODUCTION',
    CASE 
        WHEN EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.PROCEDURES WHERE PROCEDURE_NAME = 'PREDICT_TERRANEX_PRODUCTION')
        THEN '‚úÖ EXISTE'
        ELSE '‚ùå ABSENT'
    END;

-- ======================================================================
-- R√âSUM√â FINAL
-- ======================================================================
SELECT 
    'üéØ R√âSUM√â V√âRIFICATION TERRANEX' AS titre,
    '' AS composant,
    '' AS recommandation
UNION ALL
SELECT 
    '',
    'Infrastructure de base',
    'V√©rifiez r√¥le + warehouse + database ci-dessus'
UNION ALL
SELECT 
    '',
    'Donn√©es volumineuses',
    'Attendu: 50+1K+100+500+10K = 11,650 enregistrements'
UNION ALL
SELECT 
    '',
    'Documents pars√©s',
    'Attendu: 4 documents minimum'
UNION ALL
SELECT 
    '',
    'Services Cortex Search',
    'Attendu: 5 services actifs'
UNION ALL
SELECT 
    '',
    'ML et proc√©dures',
    'Attendu: 1 vue ML + 1 stored procedure'
UNION ALL
SELECT 
    '',
    'Agents IA',
    '√Ä v√©rifier manuellement dans Snowflake Intelligence'
UNION ALL
SELECT 
    '',
    'Si probl√®mes d√©tect√©s',
    'Ex√©cutez 99_RESET_ENVIRONMENT.sql puis r√©installez';
